/* 导航总区域 */
.bili-nav {
    display: flex;
    align-items: center;
    width: 100%;
    padding: 24px;
    box-sizing: border-box;
}
/* 导航 上部 左侧入口 */
.left-entry {
    display:flex;
}

/* 
flex是把a变成行内块 ,不然不能设置尺寸,那感觉操作li和a变flex是一样的 
但li不能操作a中的文本,因此要操作a,因为我要设置文本
*/
/* .left-entry .entry-title {
    display:flex;  
    height: 64px;
    align-items: center;
    color:white;
} */

/* 操作文本 */
.left-entry li a {
    color:white;
    align-items: center;
}
/* 操作块 li中有a和svg 所以还是要用flex把他们垂直对齐*/
.left-entry li {
    display: flex;
    align-items: center;
    height: 64px;
    color: white;
    margin-right: 15px; 
}

.left-entry svg {
    margin-right: 6px;
}

/* 中间的搜索区域 */
.center-search-container {
    /* flex单人一个1,就是空剩下多少就填满,因为两边我们可以设置固定的 */
    flex: 1;
    height: 40px;
    padding: 0 4px 0 4px;
    border-radius: 8px;
    border: 1px solid #e3e5e7;
    background-color: #f1f2f3;
    /* 经典配合,内部元素横向并且垂直对齐 */
    display: flex;
    align-items: center;
    position: relative;
}

/* 总盒子,相当于是个背景板,把真正的输入和按钮包在里面 */
.center-search-container:hover {
    background-color: #fff;
}

/* 输入框的外层保护,里面有输入框,所以可以用flex 
是为了让内部的真正的输入框,可以直接选择塞满我这个外部限制,
然后从外部限制来真正的限制输入框的大小,为了利用flex让输入put自适应 */
.center-search-container .nav-search-content {
    display: flex;
    height: 20px;
    width: 100%;
    /* 左右输入不至于顶到外层的边边上 */
    padding: 0 8px;
}

/* 真正的输入框 */
.nav-search-content .nav-search-input {
    flex: 1; /* 自适应 */
    background-color: transparent; /* 透明融入背景板 */
    line-height: 20px; /* 限制行高 */
    overflow: hidden; /* 如果超出了,隐藏,比如输入太多 */
    padding-right: 8px; /* 给按钮腾出来一点位置 */
}

.center-search-container .nav-search-button {
    /* 相对于外部容器的绝对 , 为了定位,感觉不需要,可以自适应 */
    /* position: absolute; */
    /* top: 4px;
    right: 7px; */
    display: flex; /* 我发现大部分都可以用flex来自适应 */
    align-items: center; /* 经典组合 */
    justify-content: center; /* 水平也居中 */
    line-height: 32px;
    border-radius: 6px;
    cursor: pointer;
    padding: 10px;
    transition: background-color .3s;
}

.center-search-container .nav-search-button:hover {
    background-color: #e3e4e5;
}

/* 右侧入口区域 */
.right-entry {
    margin-left: 10px;
    display: flex;
    align-items: center;
}

.right-entry .header-avatar {
    height: 50px;
    width: 50px;
    /* 避免贴边 */
    padding-right: 10px;
    position: relative;
}

.right-entry .header-avatar a {
    /* 经典相对绝对配合,从而限制在容器中的绝对定位 */
    position: absolute;
    top: 6px;
    left: 10px;
    width: 36px;
    height: 36px;
    /* 行高和高度相同可以居中,因为正好顶着 */
    line-height: 36px;
    border-radius: 50%;
    background-color: #00aeec;
    /* 让内部的span水平居中 */
    display: flex;
    justify-content: center;
    border: 2px solid #fff;
    color: #fff;
}

/* 外面盒子控制间距 */
.right-entry .right-entry-item {
    min-width: 50px;
    margin-right: 4px;
}

/* 内部a下两个要flex自适应为竖着对齐 */
.right-entry .right-entry-item a {
    display: flex;
    flex-direction: column;
    align-items: center;
    color: #fff;
}

.right-entry-item a span {
    font-size: 13px;
}

/*  */
.right-entry .upload {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 90px;
    height: 34px;
    line-height: 34px;
    border-radius: 8px;
    color: #fff;
    background-color: #fb7299;
    margin-left: 10px;
}
.right-entry .upload span {
    margin-left: 5px;
}

/* Banner区域 */

/* 首先是要压住nav ,图层要在上面 */
.bili-nav {
    position: absolute;
    top: 0;
    z-index: 1000;
}

/* banner图片很宽,可能溢出,所以要隐藏 */
/* 不管怎么缩放,应该图片中间要显示出来! */
.bili-banner {
    position: relative;
    height: 155px;
    width: 100%;
    overflow: hidden;
}

.bili-banner img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.bili-banner .logo {
    width: 100%;
    height: 100%;
    display: flex;
    /* logo贴底下 */
    align-items: flex-end;
}

.bili-banner .logo a {
    position: relative; 
    width: 162px;
    height: 78px;
    margin-bottom: 10px;
}

.bili-banner .mask {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: linear-gradient(rgba(0,0,0,.4) , transparent);
}

/* 频道区域 */
.bili-channel {
    height: 110px;
    padding: 0 60px;
    display: flex;
    align-items: center;
}

/* 三个icon横向并对齐 */
.bili-channel .channel-icons {
    display: flex;
    align-items: center;
}

/* 每个icons中 图表和文字上下对齐 */
.bili-channel .channel-icons a {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-right: 24px;
}

/* 图片盒子,尺寸并且让svg在中间就行了 */
.bili-channel .icon-bg {
    /* 背景尺寸限制 */
    width: 46px;
    height: 46px;
    /* 让svg在中间 */
    display: flex;
    align-items: center;
    justify-content: center;
    /* 背景是圆的 */
    border-radius: 50%;
    /* 和下面文字span有点距离 */
    margin-bottom: 6px;
}

.bili-channel .icon-bg_dynamic {
    background-color: #ff9212;
}

.bili-channel .icon-bg_popular {
    background-color: #f07775;
}

.bili-channel .icon-bg_channel {
    background-color: #59ca73;
}


.bili-channel .icon-bg svg {
    width: 25px;
    height: 25px;
}

.bili-channel span {
    text-align: center;
    
}

/* 频道右侧网格 */
.bili-channel .right-channel-container {
    width: 100%;
    display: flex;
    align-items: center;
}

/* 网格的左侧一堆按钮 grid的使用*/
.bili-channel .channel-items_left {
    display: grid;
    grid-template-columns: repeat(11,1fr);
    gap: 10px;
    width: 100%;
}

.bili-channel .channel-items_left a {
    /* 经典高和文高一样,可以卡在中间 */
    height: 26px; /* 这里我有一点疑惑,a没有变成行内块,高度能否生效? 应该可以,因为它直属父元素grid */
    line-height: 26px;
    background-color: #f6f7f8;
    border: 1px solid #f1f2f3;
    border-radius: 6px;
    /* 好像是文本水平居中来着 */
    text-align: center;
    color: #61666d;
}

/* 最右边的一堆网格 */
.bili-channel .channel-items_right {
    width: 240px;
    display: grid;
    grid-template-rows: repeat(2 ,1fr);
    /* 这个只是填充方式,相当于135一起,246一起 */
    grid-auto-flow: column;
    row-gap: 10px;
    /* 禁止被挤压 */
    flex-shrink: 0;
    margin-left: 30px;
    border-left: 1px solid #e3e5e7;
}

/* 里面有一个svg和一个span,让他们往右边靠 */
.channel-items_right a {
    width: 100%;
    height: 28px;
    /* 文字间隙 */
    letter-spacing: 2px;
    display: flex;
    align-items: center;
    /* 往右边靠 */
    justify-content: flex-end;
}

.channel-items_right a svg {
    width: 20px;
    height: 20px;
    /* 与文字有间距 */
    margin-right: 4px;
    fill: #61666d;
}

.channel-items_right span {
    color: #61666d
}


/* 推荐列表 */
.main {
    width: 100%;
    padding: 0 60px;
    box-sizing: border-box;
}

/* 思路是5列2行的网格,然后前面两行两列的正方形放轮播图
然后剩下三列,就是放普通的recommended-card */
.main .recommended-container {
    display: grid;
    grid-template-columns: repeat(5 , 1fr);
    gap: 20px;
    width: 100%;
}

/* 卡片的图片部分,不是文字部分 */
.main .recommended-card .card-image {
    position:relative;
    /* 给容器一个圆角,这样图片和遮罩就直接裁剪 */
    border-radius: 6px; 
    /* 超出该容器,隐藏 */
    overflow: hidden;
}


.main .card-image img {
    /* 撑满 */
    width: 100%;
    height: 100%;
}

.card-image .image-mask {
    /* 绝对定位方便覆盖,从而达到mask的效果 */
    position: absolute;
    bottom: 0;
    left: 0;
    /* 内边距为了遮罩上面的信息,调整信息的位置,所以增大了内边距 */
    padding: 16px 8px 6px;
    /* 遮罩的尺寸也是撑满整个容器但是不要溢出 */
    width: 100%;
    box-sizing: border-box;
    height: 38px;
    /* 阴影 */
    background-image: linear-gradient(180deg ,rgba(0,0,0,0) 0%, rgba(0,0,0,.8) 100%);
    /* 内部文字限制 */
    color: #fff;
    font-size: 13px;
    /* 让mask中的信息在一行 */
    display: flex;
    align-items: center;
}

/* 左边撑满自适应,从而把右边的顶到边边上 */
.card-image .image-mask .stats-left {
    flex: 1;
    display: flex;
    align-items: center;
}

.image-mask .stats-left .stats-item {
    display: flex;
    align-items: center;
    margin-right: 12px;
}

.image-mask svg {
    width: 18px;
    height: 18px;
    color: #fff;
    margin-right: 2px;
}

/* 底部信息 */
.card-info h3 {
    line-height: 22px;
    /* 如果文本太长,不要顶到右边边边 */
    padding-right: 16px;
    font-size: 15px;
    /* 超出显示区域要隐藏并且2行文本后显示 '...' */
    overflow: hidden;
    /* 截断设置 */
    display: -webkit-box;
    -webkit-box-orient: vertical;
    line-break: anywhere;
    -webkit-line-clamp: 2;
}

.info-bottom {
    margin-top: 4px;
    display: flex;
    align-items:center;
    font-size: 13px;
}

.info-bottom a {
    color: #9499a0;
    display: flex;
    align-items: center;
}

.info-bottom svg {
    width: 17px;
    height: 17px;
    margin-right: 2px;
}

.info-bottom .info-date {
    margin-left: 5px;
}


/* 轮播图 */
.recommended-container .carousel-area {
    /* 行列都是占1和2,从1开始3之前结束 */
    grid-row: 1/3;
    grid-column: 1/3;
    border-radius: 6px;
    overflow: hidden;
    /* 内部元素方便绝对定位 */
    position: relative;
}

.carousel-area img {
    /* 铺满父元素 */
    width: 100%;
}

.carousel-area .mask {
    width: 100%;
    height: 392px;
    /* 遮罩层就是要完全覆盖图片和tool那些,因此绝对定位到0,然后撑满*/
    position: absolute;
    top: 0;
    background: linear-gradient(0deg , #524c46 30% , transparent 42%);
    border-radius: 6px;
}

.carousel-area .tools {
    width: 100%;
    position: absolute;
    bottom: 94px;
    left: 0;
    padding: 0 15px;
    box-sizing: border-box;
}

.carousel-area .tools a {
    display: flex;
    margin-bottom: 10px;
    font-size: 18px;
    color: #fff;
}

.carousel-area .tools ul {
    /* 元素会变成块并且横向排布 */
    display: flex;
}

.carousel-area .tools li {
    width: 8px;
    height: 8px;
    margin: 4px;
    border-radius: 50%;
    background-color: #fff6;
    cursor: pointer;
}

.carousel-area .tools li.active {
    width: 14px;
    height: 14px;
    margin: 1px;
    background-color: #fff;
}

/* 装两个按钮的整个大盒子,移动到右边去 */
.carousel-area .tools .buttons {
    position: absolute;
    bottom: 23px;
    right: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.tools button {
    width: 28px;
    height: 28px;
    border: 3px;
    border-radius: 8px;
    margin-right: 8px;
    background-color: #ffffff1a;
    cursor: pointer;
    transition: background-color .5s;
}

.tools button:last-child {
    margin-right: 0;
}

.tools svg {
    width: 12px;
    height: 12px;
    color: #fff;
}


.tools button:hover {
    background-color: #fff6;
}


/* 侧边栏 */
.sidebar {
    position: fixed;
    bottom: 40px;
    right: 12px;
}

.sidebar .primary-btn {
    width: 40px;
    margin-top: 6px;
    padding: 8px 0 6px;
    box-sizing: border-box;
    border: 1px solid #e3e5e7;
    border-radius: 8px;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 12px;
    cursor: pointer;
}

.sidebar .primary-btn svg {
    width: 24px;
    height: 24px;
}

.sidebar .primary-btn-text {
    margin-top: 2px;
    
}

.primary-btn.goback {
    padding: 4px;
}

.primary-btn.top-btn svg {
    width: 15px;
    height: 8px;
}